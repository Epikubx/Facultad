package Parciales;

import tp02.ejercicio2.ListaEnlazadaGenerica;
import tp02.ejercicio2.ListaGenerica;
import tp04.ejercicio1.ArbolGeneral;

public class Parcial_Ej9 {

	private ArbolGeneral<Integer> arbol;
	
	public static void main(String[] args) {
		ArbolGeneral<Integer> arbol = new ArbolGeneral<Integer>(53);
		ArbolGeneral<Integer> aux;
		
		aux = new ArbolGeneral<Integer>(4);
		aux.agregarHijo(new ArbolGeneral<Integer>(19));
		aux.agregarHijo(new ArbolGeneral<Integer>(6));
		aux.agregarHijo(new ArbolGeneral<Integer>(33));
		arbol.agregarHijo(aux);
		
		aux = new ArbolGeneral<Integer>(77);
		aux.agregarHijo(new ArbolGeneral<Integer>(80));
		arbol.agregarHijo(aux);
		
		aux = new ArbolGeneral<Integer>(61);
		aux.agregarHijo(new ArbolGeneral<Integer>(15));
		aux.agregarHijo(new ArbolGeneral<Integer>(1));
		arbol.agregarHijo(aux);
		
		aux = new ArbolGeneral<Integer>(43);
		aux.agregarHijo(new ArbolGeneral<Integer>(68));
		aux.agregarHijo(new ArbolGeneral<Integer>(11));
		aux.agregarHijo(new ArbolGeneral<Integer>(51));
		arbol.agregarHijo(aux);
        ListaEnlazadaGenerica<Integer> lista = procesar(arbol);
        lista.comenzar();
        System.out.println(lista.toString());
	}
	
	public static ListaEnlazadaGenerica<Integer> procesar(ArbolGeneral<Integer> ar){
		ListaEnlazadaGenerica<Integer> lista = new ListaEnlazadaGenerica<Integer>();
		ListaGenerica<Integer> aux;
		int max = -999;
		lista.agregarFinal(ar.getDato());
		ListaGenerica<ArbolGeneral<Integer>> hijos = ar.getHijos();
		hijos.comenzar();
		while(!hijos.fin()){
			aux = procesar(hijos.proximo());
			aux.comenzar();
			if(aux.tamanio() > max){
				while(max > 0){
					lista.eliminarEn(lista.tamanio());
					max--;
				}
				while(!aux.fin()){
					lista.agregarFinal(aux.proximo());
				}
				max = aux.tamanio();
			}
		}
		return lista;
	}
}