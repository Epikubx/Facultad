package Parciales;

import tp02.ejercicio1.ListaDeEnterosEnlazada;
import tp03.ejercicio1.ArbolBinario;

public class ProcesadorDeArbol {
	
	private ArbolBinario<Integer> arbol;
	
	public ProcesadorDeArbol(ArbolBinario<Integer> arbol){
		this.arbol = arbol;
	}
	
	public ListaParcial procesar()
	{
		//Pre orden: Ver Izq Der
		ListaParcial lista = new ListaParcial();
		ListaParcial aux;
		if(arbol.getDato() % 2 == 0){
			if(arbol.tieneHijoDerecho() && arbol.tieneHijoIzquierdo()){
				lista.getLista().agregarFinal(arbol.getDato());// lista.agregarFinal(arbol.getDato());
			}
			lista.setPares(lista.getPares() + 1);
		}
		if(arbol.tieneHijoIzquierdo()){
			aux = new ProcesadorDeArbol(arbol.getHijoIzquierdo()).procesar();
			aux.getLista().comenzar();
			lista.setPares(lista.getPares() + aux.getPares());
			while(!aux.getLista().fin()){
				lista.getLista().agregarFinal(aux.getLista().proximo());
			}
		}
		if(arbol.tieneHijoDerecho()){
			aux = new ProcesadorDeArbol(arbol.getHijoDerecho()).procesar();
			aux.getLista().comenzar();
			lista.setPares(lista.getPares() + aux.getPares());
			while(!aux.getLista().fin()){
				lista.getLista().agregarFinal(aux.getLista().proximo());
			}
		}
		return lista;
	}
	
	public ListaParcial procesar_2()
	{
		//Post orden: Izq Der Ver
		ListaParcial lista = new ListaParcial();
		ListaParcial aux;
		if(arbol.tieneHijoIzquierdo()){
			aux = new ProcesadorDeArbol(arbol.getHijoIzquierdo()).procesar_2();
			aux.getLista().comenzar();
			lista.setPares(lista.getPares() + aux.getPares());
			while(!aux.getLista().fin()){
				lista.getLista().agregarFinal(aux.getLista().proximo());
			}
		}
		if(arbol.tieneHijoDerecho()){
			aux = new ProcesadorDeArbol(arbol.getHijoDerecho()).procesar_2();
			aux.getLista().comenzar();
			lista.setPares(lista.getPares() + aux.getPares());
			while(!aux.getLista().fin()){
				lista.getLista().agregarFinal(aux.getLista().proximo());
			}
		}
		if(arbol.getDato() % 2 != 0){
			if(arbol.tieneHijoDerecho() || arbol.tieneHijoIzquierdo()){
				lista.getLista().agregarFinal(arbol.getDato());
			}
			lista.setPares(lista.getPares() + 1);
		}
		return lista;
	}
}
